// <auto-generated />
using System;
using BABA.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BABA.Persistence.Migrations
{
    [DbContext(typeof(DBBabaContext))]
    [Migration("20211024200512_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("BABA.Domain.Models.Atleta", b =>
                {
                    b.Property<int>("AtletaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .HasColumnType("TEXT");

                    b.Property<int>("Camisa")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Comissao")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Posicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("TEXT");

                    b.HasKey("AtletaId");

                    b.ToTable("Atletas");
                });

            modelBuilder.Entity("BABA.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BABA.Domain.Models.Controle", b =>
                {
                    b.Property<int>("ControleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("MensalidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ehAtleta")
                        .HasColumnType("INTEGER");

                    b.HasKey("ControleId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MensalidadeId");

                    b.ToTable("Controles");
                });

            modelBuilder.Entity("BABA.Domain.Models.Mensalidade", b =>
                {
                    b.Property<int>("MensalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtletaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EhQuitada")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorPrincipal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorSaldo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("TEXT");

                    b.HasKey("MensalidadeId");

                    b.HasIndex("AtletaId");

                    b.ToTable("Mensalidades");
                });

            modelBuilder.Entity("BABA.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BABA.Domain.Models.Controle", b =>
                {
                    b.HasOne("BABA.Domain.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BABA.Domain.Models.Mensalidade", "Mensalidade")
                        .WithMany("Controles")
                        .HasForeignKey("MensalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Mensalidade");
                });

            modelBuilder.Entity("BABA.Domain.Models.Mensalidade", b =>
                {
                    b.HasOne("BABA.Domain.Models.Atleta", "Atleta")
                        .WithMany("Mensalidades")
                        .HasForeignKey("AtletaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");
                });

            modelBuilder.Entity("BABA.Domain.Models.Atleta", b =>
                {
                    b.Navigation("Mensalidades");
                });

            modelBuilder.Entity("BABA.Domain.Models.Mensalidade", b =>
                {
                    b.Navigation("Controles");
                });
#pragma warning restore 612, 618
        }
    }
}
